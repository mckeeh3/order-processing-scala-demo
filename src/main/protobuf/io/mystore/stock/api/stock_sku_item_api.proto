syntax = "proto3";

import "kalix/annotations.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

package io.mystore.stock.api;

service StockSkuItemService {
  option (kalix.codegen) = {
    event_sourced_entity : {
      name : "io.mystore.stock.entity.StockSkuItemApi"
      entity_type : "stock_sku_item"
      state : "io.mystore.stock.entity.StockSkuItemState"
      events : [
        "io.mystore.stock.entity.StockSkuItemCreated",
        "io.mystore.stock.entity.OrderRequestedJoinToStockAccepted",
        "io.mystore.stock.entity.OrderRequestedJoinToStockRejected",
        "io.mystore.stock.entity.StockRequestedJoinToOrder",
        "io.mystore.stock.entity.StockRequestedJoinToOrderAccepted",
        "io.mystore.stock.entity.StockRequestedJoinToOrderRejected" //
      ]
    }
  };

  rpc CreateStockSkuItem(CreateStockSkuItemCommand)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/stock-sku-items/create-stock-sku-item"
      body : "*"
    };
  }

  rpc OrderRequestsJoinToStock(OrderRequestsJoinToStockCommand)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/stock-sku-items/order-requests-join-to-stock"
      body : "*"
    };
  }

  rpc OrderRequestsJoinToStockRejected(OrderRequestsJoinToStockRejectedCommand)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/stock-sku-items/order-requests-join-to-stock-rejected"
      body : "*"
    };
  }

  rpc StockRequestedJoinToOrderAccepted(
      StockRequestedJoinToOrderAcceptedCommand)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/stock-sku-items/stock-requested-join-to-order-accepted"
      body : "*"
    };
  }

  rpc StockRequestedJoinToOrderRejected(
      StockRequestedJoinToOrderRejectedCommand)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/stock-sku-items/stock-requested-to-join-order-rejected"
      body : "*"
    };
  }

  rpc GetStockSkuItem(GetStockSKuItemRequest)
      returns (GetStockSKuItemResponse) {
    option (google.api.http) = {
      get : "/stock-sku_items"
    };
  }
}

message CreateStockSkuItemCommand {
  string stock_sku_item_id = 1 [ (kalix.field).entity_key = true ];
  string sku_id = 2;
  string sku_name = 3;
  string stock_order_id = 4;
}

message OrderRequestsJoinToStockCommand {
  string stock_sku_item_id = 1 [ (kalix.field).entity_key = true ];
  string sku_id = 2;
  string order_id = 3;
  string order_sku_item_id = 4;
  string stock_order_id = 5;
}

message OrderRequestsJoinToStockRejectedCommand {
  string stock_sku_item_id = 1 [ (kalix.field).entity_key = true ];
  string sku_id = 2;
  string order_id = 3;
  string order_sku_item_id = 4;
  string stock_order_id = 5;
}

message StockRequestedJoinToOrderAcceptedCommand {
  string stock_sku_item_id = 1 [ (kalix.field).entity_key = true ];
  string sku_id = 2;
  string order_id = 3;
  string order_sku_item_id = 4;
  google.protobuf.Timestamp shipped_utc = 5;
  string stock_order_id = 6;
}

message StockRequestedJoinToOrderRejectedCommand {
  string stock_sku_item_id = 1 [ (kalix.field).entity_key = true ];
  string sku_id = 2;
  string order_id = 3;
  string order_sku_item_id = 4;
  string stock_order_id = 5;
}

message GetStockSKuItemRequest {
  string stock_sku_item_id = 1 [ (kalix.field).entity_key = true ];
}

message GetStockSKuItemResponse {
  string stock_sku_item_id = 1;
  string sku_id = 2;
  string sku_name = 3;
  string order_id = 4;
  string order_sku_item_id = 5;
  google.protobuf.Timestamp shipped_utc = 6;
  string stock_order_id = 7;
}
