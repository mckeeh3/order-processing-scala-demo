syntax = "proto3";

package io.mystore.order.action;

import "kalix/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "io/mystore/shipping/entity/shipping_entity.proto";

service ShippingToOrder {
  option (kalix.codegen) = {
    action : {}
  };

  rpc OnOrderShipped(shipping.entity.OrderShipped)
      returns (google.protobuf.Empty) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "shipping"
    };
  }

  rpc OnOrderReleased(shipping.entity.OrderReleased)
      returns (google.protobuf.Empty) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "shipping"
    };
  }

  rpc OnOrderItemShipped(shipping.entity.OrderItemShipped)
      returns (google.protobuf.Empty) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "shipping"
    };
  }

  rpc OnOrderItemReleased(shipping.entity.OrderItemReleased)
      returns (google.protobuf.Empty) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "shipping"
    };
  }

  rpc IgnoreOtherEvents(google.protobuf.Any) returns (google.protobuf.Empty) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "shipping"
    };
  }
}
