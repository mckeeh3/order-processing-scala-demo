syntax = "proto3";

package io.mystore.cart.view;

import "kalix/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "io/mystore/cart/entity/shopping_cart_entity.proto";
import "io/mystore/cart/view/cart.proto";

service CartsByDate {
  option (kalix.codegen) = {
    view : {}
  };

  rpc GetCartsByDate(GetCartsByDateRequest) returns (GetCartsByDateResponse) {
    option (kalix.method).view.query = {
      query : "SELECT * AS carts"
              "  FROM carts_by_date"
              " WHERE checked_out_utc >= :from_date"
              "   AND checked_out_utc <= :to_date"
    };
    option (google.api.http) = {
      get : "/carts-by-date"
    };
  }

  rpc OnItemAdded(entity.ItemAdded) returns (Cart) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "shopping_cart"
    };
    option (kalix.method).view.update = {
      table : "carts_by_date"
      transform_updates : true
    };
  }

  rpc OnItemChanged(entity.ItemChanged) returns (Cart) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "shopping_cart"
    };
    option (kalix.method).view.update = {
      table : "carts_by_date"
      transform_updates : true
    };
  }

  rpc OnItemRemoved(entity.ItemRemoved) returns (Cart) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "shopping_cart"
    };
    option (kalix.method).view.update = {
      table : "carts_by_date"
      transform_updates : true
    };
  }

  rpc OnCartCheckedOut(entity.CartCheckedOut) returns (Cart) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "shopping_cart"
    };
    option (kalix.method).view.update = {
      table : "carts_by_date"
      transform_updates : true
    };
  }

  rpc OnCartDeleted(entity.CartDeleted) returns (Cart) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "shopping_cart"
    };
    option (kalix.method).view.update = {
      table : "carts_by_date"
      transform_updates : true
    };
  }
}

message GetCartsByDateRequest {
  google.protobuf.Timestamp from_date = 2;
  google.protobuf.Timestamp to_date = 3;
}

message GetCartsByDateResponse { repeated Cart carts = 1; }
