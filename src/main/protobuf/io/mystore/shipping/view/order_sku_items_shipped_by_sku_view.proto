syntax = "proto3";

package io.mystore.shipping.view;

import "kalix/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "io/mystore/shipping/view/order_sku_item.proto";
import "io/mystore/shipping/entity/order_sku_item_entity.proto";

service OrderSkuItemsShippedBySku {
  option (kalix.codegen) = {
    view : {}
  };

  rpc GetOrderSkuItemsShippedBySku(GetOrderSkuItemsShippedBySkuRequest)
      returns (GetOrderSkuItemsShippedBySkuResponse) {
    option (kalix.method).view.query = {
      query : "SELECT * AS order_sku_items"
              "  FROM order_sku_items_shipped_by_sku"
              " WHERE shipped_utc.seconds > 0"
              "   AND sku_id = :sku_id"
    };
    option (google.api.http) = {
      get : "/order-sku-items-shipped-by-sku"
    };
  }

  rpc OnOrderSkuItemCreated(entity.OrderSkuItemCreated)
      returns (OrderSkuItemRow) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "order_sku_item"
    };
    option (kalix.method).view.update = {
      table : "order_sku_items_shipped_by_sku"
      transform_updates : true
    };
  }

  rpc OnStockRequestedJoinToOrderAccepted(
      entity.StockRequestedJoinToOrderAccepted) returns (OrderSkuItemRow) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "order_sku_item"
    };
    option (kalix.method).view.update = {
      table : "order_sku_items_shipped_by_sku"
      transform_updates : true
    };
  }

  rpc OnStockRequestedJoinToOrderRejected(
      entity.StockRequestedJoinToOrderRejected) returns (OrderSkuItemRow) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "order_sku_item"
    };
    option (kalix.method).view.update = {
      table : "order_sku_items_shipped_by_sku"
      transform_updates : true
    };
  }

  rpc OnOrderRequestedJoinToStockAccepted(
      entity.OrderRequestedJoinToStockAccepted) returns (OrderSkuItemRow) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "order_sku_item"
    };
    option (kalix.method).view.update = {
      table : "order_sku_items_shipped_by_sku"
      transform_updates : true
    };
  }

  rpc OnOrderRequestedJoinToStockRejected(
      entity.OrderRequestedJoinToStockRejected) returns (OrderSkuItemRow) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "order_sku_item"
    };
    option (kalix.method).view.update = {
      table : "order_sku_items_shipped_by_sku"
      transform_updates : true
    };
  }

  rpc OnBackOrderedOrderSkuItem(entity.BackOrderedOrderSkuItem)
      returns (OrderSkuItemRow) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "order_sku_item"
    };
    option (kalix.method).view.update = {
      table : "order_sku_items_shipped_by_sku"
      transform_updates : true
    };
  }

  rpc IgnoreOtherEvents(google.protobuf.Any) returns (OrderSkuItemRow) {
    option (kalix.method).eventing.in = {
      event_sourced_entity : "order_sku_item"
    };
    option (kalix.method).view.update = {
      table : "order_sku_items_shipped_by_sku"
      transform_updates : true
    };
  }
}

message GetOrderSkuItemsShippedBySkuRequest { string sku_id = 1; }

message GetOrderSkuItemsShippedBySkuResponse {
  repeated OrderSkuItemRow order_sku_items = 1;
}
